// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {

    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.0.1'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}

ext {
    junit_version = 4.12
}

task clean(type: Delete) {
    delete rootProject.buildDir
}

//第一个task
task hello {
    doLast {
        println 'Hello,World'
    }
}

/*
快捷的task定义
<< 其实就是doLast的别名
注意：文档告诉我们尽量使用Task.doFirst(org.gradle.api.Action)和Task.doLast(org.gradle.api.Action)
来执行，因为在gradle 5.0会对它进行删除
 */
//task hello2 << {
//    println "快捷的task定义"
//}

/**
 * 在task中使用groovy
 */
task upper {
    doLast {
        String str = 'mY_nAme'
        println 'Original: ' + str
        println 'Upper case: ' + str.toUpperCase()
    }
}

task count {
    doLast {
        4.times {
            print "$it "
        }
    }
}

/**
 * task依赖
 * 这里它会先执行hello task，在执行自己
 */
task intro(dependsOn: hello) {
    doLast {
        println "I'm Gradle"
    }
}

task taskX(dependsOn: 'taskY') {
    doLast {
        println 'taskX'
    }
}
task taskY {
    doLast {
        println 'taskY'
    }
}

/**
 * 动态task
 */

4.times { counter ->
    task "task$counter" {
        doLast {
            println "I'm task number $counter"
        }
    }
}

/**
 * 通过API访问任务，添加依赖关系
 */
task0.dependsOn task2, task3

/**
 * 访问task的属性,这里获取task的名称
 */
hello.doLast {
    println "Getting from ${hello.name} task"
}

/**
 * 给task定义额外的属性
 */
task myTask {
    ext.myProperty = 'myValue'
}

task printTaskProperties {
    doLast {
        println myTask.myProperty
    }
}

//定义默认的task，./gradlew -q
defaultTasks 'hello'

/**
 * 重写task
 */
task overwriteTask()

task overwriteTask(overwrite: true) {
    doLast {
        println 'overrideTask'
    }
}

hello.onlyIf {
    !project.hasProperty("skipHello")
}